<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Interface</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        #chat-box::-webkit-scrollbar {
            width: 7px;
        }

        #chat-box::-webkit-scrollbar-track {
            background-color: transparent;
        }

        #chat-box::-webkit-scrollbar-thumb {
            border-radius: 8px;
            background-color: #004492;
        }
        
        #chat-box::-webkit-scrollbar-thumb:hover {
            background-color: #01346e;
        }

        .chat-opener {
            position: fixed;
            bottom: 100px;
            right: 100px;
            background-color: #004492;
            padding: 20px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            z-index: 1000;
        }

        .chat-container {
            display: none;
        }

        .inside-container-chat {
            position: fixed;
            bottom: 100px;
            right: 100px;
            width: 300px;
            height: 500px;
            background-color: #f8f9fa;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .chat {
            border-top-right-radius: 10px;
            border-top-left-radius: 10px;
            height: 100px;
            background-color: #004492;
            color: white;
            padding: 20px;
            position: relative;
        }

        .chat img {
            width: 48px;
            height: 48px;
            background-color: #fff;
            border-radius: 50%;
            padding: 10px;
        }

        #chat-box {
            height: 286px;
            overflow: auto;
            padding: 15px;
        }

        .bot-message {
            display: flex;
            align-items: flex-start;
            margin: 10px 0;
        }

        .bot-message img {
            width: 30px;
            height: 30px;
            background-color: #fff;
            border-radius: 50%;
            padding: 5px;
            margin: 4px 10px;
        }

        .bot-message p {
            margin-top: 7px;
            font-size: 15px;
            background-color: #e9ecef;
            border-radius: 5px;
            padding: 8px;
        }

        #options {
            position: absolute;
            bottom: 10px;
            left: 0;
            right: 0;
            padding: 0 15px;
        }

        .option-btn {
            width: calc(50% - 10px);
            margin: 5px;
        }

        @media screen and (max-width: 900px) {
            .chat-opener,
            .inside-container-chat {
                right: 50px;
                bottom: 50px;
            }
        }

        @media screen and (max-width: 500px) {
            .chat-opener,
            .inside-container-chat {
                right: 30px !important;
                bottom: 30px !important;
            }
        }
    </style>
</head>
<body>
    <div class="chat-opener">
        <img src="/static/image/chat2.0.png" alt="Chat" class="img-fluid">
    </div>

    <div class="chat-container">
        <div class="inside-container-chat">
            <header class="chat d-flex justify-content-between align-items-center">
                <img src="/static/image/icon-park_robot.png" alt="Robot" class="img-fluid">
                <button type="button" id="back-btn" class="btn btn-link text-white p-0" style="display: none;">
                    <img src="/static/image/backicon.png" alt="Back" class="img-fluid">
                </button>
                <div class="insidetext">
                    <h5 class="mb-0">UNI ASSIST</h5>
                    <small>online</small>
                </div>
            </header>

            <div class="parent">
                <div id="chat-box">
                    <div class="bot-message">
                        <img src="/static/image/icon-park_robot.png" alt="Robot" class="img-fluid">
                        <p class="mb-0">Hello and welcome!</p>
                    </div>
                </div>
                
                <div id="options" class="d-flex flex-wrap justify-content-between">
                    <button type="button" class="btn btn-light option-btn" data-value="courses">Courses</button>
                    <button type="button" class="btn btn-light option-btn" data-value="OpenDays">Open days</button>
                    <button type="button" class="btn btn-light option-btn" data-value="ContactUS">Contact us</button>
                    <button type="button" class="btn btn-light option-btn" data-value="Howtoapply">How to apply?</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Your existing JavaScript code remains the same -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Your existing JavaScript code here - unchanged
            const chatOpener = document.querySelector(".chat-opener");
            const chatContainer = document.querySelector(".chat-container");
            const chatBox = document.querySelector("#chat-box");
            const optionButtons = document.querySelectorAll(".option-btn");
            const backBtn = document.getElementById("back-btn");

            let initialState = [];
            let stateStack = [];

            chatOpener.addEventListener("click", function (event) {
                event.stopPropagation();
                chatContainer.style.display = "block";
            });

            document.addEventListener("click", function (event) {
                if (!chatContainer.contains(event.target) && event.target !== chatOpener) {
                    chatContainer.style.display = "none";
                }
            });

            fetch('/data')
                .then(response => response.json())
                .then(data => {
                    initialState = [...optionButtons].map(btn => ({
                        value: btn.getAttribute("data-value"),
                        text: btn.textContent
                    }));

                    optionButtons.forEach(function(button) {
                        button.addEventListener("click", function() {
                            const value = this.getAttribute("data-value");
                            const messageDiv = document.createElement("div");
                            messageDiv.className = "time bot-message";

                            const img = document.createElement("img");
                            img.src = "/static/image/icon-park_robot.png"; 
                            messageDiv.appendChild(img);

                            const message = document.createElement("p");

                            stateStack.push([...optionButtons].map(btn => ({
                                value: btn.getAttribute("data-value"),
                                text: btn.textContent
                            })));

                            if (data[value]) {
                                if (typeof data[value] === 'string') {
                                    message.textContent = data[value];
                                } else {
                                    optionButtons.forEach((btn, i) => {
                                        if (data[value].buttons[i]) {
                                            btn.setAttribute("data-value", data[value].buttons[i]);
                                            btn.textContent = data[value].buttons[i]; 
                                        } else {
                                            btn.style.display = 'none';
                                        }
                                    });
                                    message.textContent = "You clicked: " + value;
                                }
                            } else if (Object.values(data).some(obj => obj.buttons && obj.buttons.includes(value))) {
                                for (let key in data) {
                                    if (data[key].buttons && data[key].buttons.includes(value)) {
                                        message.textContent = data[key].messages[data[key].buttons.indexOf(value)];
                                        break;
                                    }
                                }
                            } else {
                                message.textContent = "You clicked: " + value;
                            }

                            messageDiv.appendChild(message);
                            chatBox.appendChild(messageDiv);

                            backBtn.style.display = 'inline-block';
                        });
                    });

                    backBtn.addEventListener("click", function() {
                        initialState.forEach((state, i) => {
                            optionButtons[i].setAttribute("data-value", state.value);
                            optionButtons[i].textContent = state.text;
                            optionButtons[i].style.display = 'inline-block';
                        });

                        stateStack = [];
                        backBtn.style.display = 'none';
                    });
                });
        });
    </script>
</body>
</html>